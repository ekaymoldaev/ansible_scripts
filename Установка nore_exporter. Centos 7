Установка nore_exporter. Centos 7



1. Создаем роль node_exporter, для этого переходим в директорию /etc/ansible/
[root@localhost ~]# ansible-galaxy init roles/node_exporter

2. создаем новый playbook /etc/ansible/playbooks/node_exporter.yml:
- name: install node_exporter
  hosts: test
  become: yes
  roles:
  - node_exporter	

3. Назначение переменных /etc/ansible/roles/node_exporter/defaults/main.yml
---
# defaults file for roles/node_exporter

node_exporter_version: "1.3.1"
node_exporter_bin: /usr/local/bin/node_exporter
node_exporter_user: node-exporter
node_exporter_group: "{{ node_exporter_user }}"
node_exporter_dir_conf: /etc/node_exporter

4. Настройка task node_exporter.
/etc/ansible/roles/node_exporter/tasks/main.yml
---
# tasks file for roles/node_exporter

- name: check if node exporter exist
  stat:
    path: "{{ node_exporter_bin }}"
  register: __check_node_exporter_present

- name: create node exporter user
  user:
    name: "{{ node_exporter_user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: create node exporter config dir
  file:
    path: "{{ node_exporter_dir_conf }}"
    state: directory
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"

- name: download and unzip node exporter if not exist
  unarchive:
    src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
    validate_certs: no
  when: __check_node_exporter_present.stat.exists == false

- name: move the binary to the final destination
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "{{ node_exporter_bin }}"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: 0755
    remote_src: yes
  when: __check_node_exporter_present.stat.exists == false

- name: clean
  file:
    path: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/
    state: absent

- name: install service
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0755
  notify: reload_daemon_and_restart_node_exporter

- meta: flush_handlers

- name: service always started
  systemd:
    name: node_exporter
    state: started
    enabled: yes

5. Создаем новый сервис
/etc/ansible/roles/node_exporter/templates/node_exporter.service.j2
[Unit]
Description=Node Exporter
After=network-online.target

[Service]
User={{ node_exporter_user }}
Group={{ node_exporter_user }}
Type=simple
ExecStart={{ node_exporter_bin }}

[Install]
WantedBy=multi-user.target

6.

/etc/ansible/roles/node_exporter/handlers/main.yml
---
# handlers file for roles/node_exporter

- name: reload_daemon_and_restart_node_exporter
  systemd:
    name: node_exporter
    state: restarted
    daemon_reload: yes
    enabled: yes

7. Установка node_exporter
ansible-playbook /etc/ansible/playbooks/node_exporter.yml
